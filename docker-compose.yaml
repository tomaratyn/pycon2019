version: '3'
services:
  event_registerations_producer:
    tty: true
    build:
      context: .
      dockerfile: Dockerfile.event-registration-producer
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
      - KAFKA_TOPIC=event_registration
  event_registerations_consumer:
    tty: true
    build:
      context: .
      dockerfile: Dockerfile.event-registration-consumer
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
      - KAFKA_TOPIC=event_registration
      - CONSUMER_GROUP_ID=docker-compose-consumer-group
    depends_on:
      - kafka
  ksql_client:
    tty: true
    build:
      context: .
      dockerfile: Dockerfile.ksql-client
    depends_on:
      - ksql_server
    environment:
      - KSQL_SERVER=ksql_server:8088
  kafka:
    image: 'bitnami/kafka:2'
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  zookeeper:
    image: 'bitnami/zookeeper:3'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  ksql_server:
    image: confluentinc/cp-ksql-server:5.3.1
    ports:
      - '8088:8088'
    environment:
      - KSQL_BOOTSTRAP_SERVERS=kafka:9092
      - KSQL_LISTENERS=http://0.0.0.0:8088/
      - KSQL_KSQL_SERVICE_ID=confluent_test_2
    depends_on:
      - kafka
  ksql_cli:
    image: confluentinc/cp-ksql-cli
    environment:
      - CONSUMER_GROUP_ID=ksql_cli_111
      - KSQL_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - ksql_server
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local



